apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: {{ NAMESPACE }}
  labels:
    component: kibana
data:
  kibana.yml: |
    ---
    server.name: kibana
    server.host: "0"
    elasticsearch.url: http://elasticsearch:9200
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: {{ NAMESPACE }}
  labels:
    component: kibana
spec:
  type: NodePort
  selector:
    component: kibana
  ports:
  - name: http
    nodePort: 30002
    port: 80
    targetPort: 5601
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ NAMESPACE }}
  labels:
    component: kibana
    name: kibana
    deployment: {{ DEPLOY_TO }}
spec:
  replicas: 1
  selector:
    matchLabels:
     component: kibana
  template:
    metadata:
      labels:
        component: kibana
        name: kibana
        deployment: {{ DEPLOY_TO }}
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana-oss:{{ ELASTICSEARCH_VERSION }}
        imagePullPolicy: {{ IMAGE_PULL_POLICY }}
        env:
        - name: CLUSTER_NAME
          value: "{{ ES_CLUSTER_NAME }}"
        - name: SERVER_BASEPATH
          value: /api/v1/namespaces/default/services/kibana:http/proxy
        resources:
          requests:
            cpu: 0.01
          limits:
            cpu: 1
        ports:
        - containerPort: 5601
          name: http
        readinessProbe:
          httpGet:
            path: /api/status
            port: http
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
          - name: config
            mountPath: /usr/share/kibana/config
      volumes:
        - name: config
          configMap:
            name: kibana-config